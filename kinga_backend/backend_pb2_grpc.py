# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import backend_pb2 as backend__pb2


class BackendStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStudent = channel.unary_unary(
                '/backend.Backend/CreateStudent',
                request_serializer=backend__pb2.Student.SerializeToString,
                response_deserializer=backend__pb2.Student.FromString,
                )
        self.DeleteStudent = channel.unary_unary(
                '/backend.Backend/DeleteStudent',
                request_serializer=backend__pb2.Id.SerializeToString,
                response_deserializer=backend__pb2.Empty.FromString,
                )
        self.UpdateStudent = channel.unary_unary(
                '/backend.Backend/UpdateStudent',
                request_serializer=backend__pb2.Student.SerializeToString,
                response_deserializer=backend__pb2.Empty.FromString,
                )
        self.RetrieveStudent = channel.unary_unary(
                '/backend.Backend/RetrieveStudent',
                request_serializer=backend__pb2.Id.SerializeToString,
                response_deserializer=backend__pb2.Student.FromString,
                )
        self.RetrieveInstitutionStudents = channel.unary_stream(
                '/backend.Backend/RetrieveInstitutionStudents',
                request_serializer=backend__pb2.Id.SerializeToString,
                response_deserializer=backend__pb2.Student.FromString,
                )
        self.CreateInstitution = channel.unary_unary(
                '/backend.Backend/CreateInstitution',
                request_serializer=backend__pb2.Institution.SerializeToString,
                response_deserializer=backend__pb2.Institution.FromString,
                )
        self.RetrieveInstitution = channel.unary_unary(
                '/backend.Backend/RetrieveInstitution',
                request_serializer=backend__pb2.Id.SerializeToString,
                response_deserializer=backend__pb2.Institution.FromString,
                )
        self.CreateProfileImage = channel.unary_unary(
                '/backend.Backend/CreateProfileImage',
                request_serializer=backend__pb2.ProfileImage.SerializeToString,
                response_deserializer=backend__pb2.Empty.FromString,
                )
        self.DeleteProfileImage = channel.unary_unary(
                '/backend.Backend/DeleteProfileImage',
                request_serializer=backend__pb2.Id.SerializeToString,
                response_deserializer=backend__pb2.Empty.FromString,
                )
        self.UpdateProfileImage = channel.unary_unary(
                '/backend.Backend/UpdateProfileImage',
                request_serializer=backend__pb2.ProfileImage.SerializeToString,
                response_deserializer=backend__pb2.Empty.FromString,
                )
        self.RetrieveProfileImage = channel.unary_unary(
                '/backend.Backend/RetrieveProfileImage',
                request_serializer=backend__pb2.Id.SerializeToString,
                response_deserializer=backend__pb2.ProfileImage.FromString,
                )


class BackendServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveInstitutionStudents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInstitution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveInstitution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProfileImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProfileImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveProfileImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BackendServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStudent,
                    request_deserializer=backend__pb2.Student.FromString,
                    response_serializer=backend__pb2.Student.SerializeToString,
            ),
            'DeleteStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStudent,
                    request_deserializer=backend__pb2.Id.FromString,
                    response_serializer=backend__pb2.Empty.SerializeToString,
            ),
            'UpdateStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStudent,
                    request_deserializer=backend__pb2.Student.FromString,
                    response_serializer=backend__pb2.Empty.SerializeToString,
            ),
            'RetrieveStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveStudent,
                    request_deserializer=backend__pb2.Id.FromString,
                    response_serializer=backend__pb2.Student.SerializeToString,
            ),
            'RetrieveInstitutionStudents': grpc.unary_stream_rpc_method_handler(
                    servicer.RetrieveInstitutionStudents,
                    request_deserializer=backend__pb2.Id.FromString,
                    response_serializer=backend__pb2.Student.SerializeToString,
            ),
            'CreateInstitution': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInstitution,
                    request_deserializer=backend__pb2.Institution.FromString,
                    response_serializer=backend__pb2.Institution.SerializeToString,
            ),
            'RetrieveInstitution': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInstitution,
                    request_deserializer=backend__pb2.Id.FromString,
                    response_serializer=backend__pb2.Institution.SerializeToString,
            ),
            'CreateProfileImage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProfileImage,
                    request_deserializer=backend__pb2.ProfileImage.FromString,
                    response_serializer=backend__pb2.Empty.SerializeToString,
            ),
            'DeleteProfileImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProfileImage,
                    request_deserializer=backend__pb2.Id.FromString,
                    response_serializer=backend__pb2.Empty.SerializeToString,
            ),
            'UpdateProfileImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileImage,
                    request_deserializer=backend__pb2.ProfileImage.FromString,
                    response_serializer=backend__pb2.Empty.SerializeToString,
            ),
            'RetrieveProfileImage': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveProfileImage,
                    request_deserializer=backend__pb2.Id.FromString,
                    response_serializer=backend__pb2.ProfileImage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'backend.Backend', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Backend(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/CreateStudent',
            backend__pb2.Student.SerializeToString,
            backend__pb2.Student.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/DeleteStudent',
            backend__pb2.Id.SerializeToString,
            backend__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/UpdateStudent',
            backend__pb2.Student.SerializeToString,
            backend__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/RetrieveStudent',
            backend__pb2.Id.SerializeToString,
            backend__pb2.Student.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveInstitutionStudents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/backend.Backend/RetrieveInstitutionStudents',
            backend__pb2.Id.SerializeToString,
            backend__pb2.Student.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInstitution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/CreateInstitution',
            backend__pb2.Institution.SerializeToString,
            backend__pb2.Institution.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveInstitution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/RetrieveInstitution',
            backend__pb2.Id.SerializeToString,
            backend__pb2.Institution.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProfileImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/CreateProfileImage',
            backend__pb2.ProfileImage.SerializeToString,
            backend__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProfileImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/DeleteProfileImage',
            backend__pb2.Id.SerializeToString,
            backend__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfileImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/UpdateProfileImage',
            backend__pb2.ProfileImage.SerializeToString,
            backend__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveProfileImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backend.Backend/RetrieveProfileImage',
            backend__pb2.Id.SerializeToString,
            backend__pb2.ProfileImage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
